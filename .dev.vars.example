# Cloudflare Worker 本地开发环境变量示例 (.dev.vars)
# 文件将被 .gitignore 忽略，复制为 .dev.vars 后填入真实值即可生效。
#
# 使用方法：
#   cp .dev.vars.example .dev.vars
#   # 修改下列值
#   wrangler dev           # 本地预览时会自动加载 .dev.vars

GH_NAME=octocat
GH_REPO=Hello-World
GH_BRANCH=main
# GitHub PAT：建议只赋予 repo:read 权限
GH_TOKEN=

# 多目标地址可用逗号、空格或换行分隔
URL=https://example.com/assets, https://fastly.example.com/assets
# URL302=                       # 若想使用 302 跳转替代反代，可填写此项

# 自定义错误提示
ERROR=文件拉取失败，请检查路径或权限！

# 受保护目录及对应密钥示例（格式: 目录:密钥，多条用逗号或分号分隔）
AUTH_PATHS="config:abc123,secret-folder:xyz789"

# ===== 动态内容替换配置 =====
# 使用JSON格式配置替换规则，支持多组规则和多种替换模式
# 配置示例：
REPLACE_CONFIG='[{"files":["/config/*"],"mode":"env","api":{"url":"https://api.example.com/config/","headers":{"Authorization":"Bearer YOUR_TOKEN"}},"mappings":{"database_host":"data.database.host","api_key":"data.keys.api"},"cache":300}]'

# 完整配置格式说明：
# [{
#   "files": ["/path/to/file1", "/path/to/file2"],  // 需要替换的文件列表
#   "mode": "env",                                   // 替换模式: env (${env:var}), template ({{var}}), regex
#   "pattern": "\\$\\{([^}]+)\\}",                   // 可选：regex模式下的自定义正则
#   "api": {                                         // 可选：API数据源配置
#     "url": "https://api.example.com/data",
#     "method": "GET",                               // 默认GET
#     "headers": {"Authorization": "Bearer TOKEN"}
#   },
#   "mappings": {                                    // 占位符到JSON路径的映射
#     "variable_name": "json.path.to.value"
#   },
#   "static": {                                      // 可选：静态替换值（优先级高于API）
#     "version": "1.0.0",
#     "env": "production"
#   },
#   "onError": "keep",                               // 错误处理: keep(保留原文), remove(删除), error(报错)
#   "cache": 300                                     // 可选：API缓存时间（秒），0表示不缓存
# }]
#
# 文件路径支持通配符：
# - "/config/*" - 匹配 config 目录下所有文件
# - "/config/*.yml" - 匹配 config 目录下所有 yml 文件
# - "/*/app.yml" - 匹配任意一级目录下的 app.yml
